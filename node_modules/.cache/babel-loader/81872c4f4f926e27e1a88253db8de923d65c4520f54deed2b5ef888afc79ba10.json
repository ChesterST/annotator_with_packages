{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nimport _imports_0 from '@/assets/step-1.png';\nimport _imports_1 from '@/assets/step-2.png';\nimport _imports_2 from '@/assets/step-3.png';\nconst _hoisted_1 = {\n  class: \"q-mx-auto q-my-xl\",\n  style: {\n    \"max-width\": \"600px\"\n  }\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h5\", {\n  class: \"text-h5\"\n}, \"NER Text Annotator\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"text-subtitle1 text-grey-7\"\n}, \" Annotate text for spaCy NER Model training \", -1 /* HOISTED */);\nconst _hoisted_4 = {\n  class: \"q-my-xl q-py-md\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"text-subtitle1 text-grey-7 q-my-sm\"\n}, \" Hint: You can also drag and drop files into this window! \", -1 /* HOISTED */);\nconst _hoisted_6 = {\n  class: \"bg-grey-1 q-pa-lg\"\n};\nconst _hoisted_7 = {\n  class: \"q-mx-auto\",\n  style: {\n    \"max-width\": \"600px\"\n  }\n};\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"h4\", {\n  class: \"text-h4\"\n}, \" How to use the NER Annotator? \", -1 /* HOISTED */);\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"text-subtitle1 q-my-md\"\n}, \"Tips to prepare the text file\", -1 /* HOISTED */);\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"ul\", null, [/*#__PURE__*/_createElementVNode(\"li\", null, \"Break your content in paragraphs or passages\"), /*#__PURE__*/_createElementVNode(\"li\", null, [/*#__PURE__*/_createTextVNode(\" Maintain a consistent seperator between the passages. \"), /*#__PURE__*/_createElementVNode(\"br\"), /*#__PURE__*/_createTextVNode(\" Eg., newline, empty line or a text seperator like \"), /*#__PURE__*/_createElementVNode(\"code\", null, \"---\")]), /*#__PURE__*/_createElementVNode(\"li\", null, \" For large datasets, break the text into smaller files and tag them seperately \")], -1 /* HOISTED */);\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"ul\", {\n  class: \"q-my-md\"\n}, [/*#__PURE__*/_createElementVNode(\"li\", null, [/*#__PURE__*/_createTextVNode(\"Use the \"), /*#__PURE__*/_createElementVNode(\"strong\", null, \"New Tag\"), /*#__PURE__*/_createTextVNode(\" button to create new tags\")]), /*#__PURE__*/_createElementVNode(\"li\", null, [/*#__PURE__*/_createTextVNode(\" Use the \"), /*#__PURE__*/_createElementVNode(\"strong\", null, \"Edit Tag\"), /*#__PURE__*/_createTextVNode(\" button to remove unwanted tags \")]), /*#__PURE__*/_createElementVNode(\"li\", null, [/*#__PURE__*/_createTextVNode(\" Click the \"), /*#__PURE__*/_createElementVNode(\"strong\", null, \"Save\"), /*#__PURE__*/_createTextVNode(\" button once you are done annotating an entry and to move to the next one \")]), /*#__PURE__*/_createElementVNode(\"li\", null, [/*#__PURE__*/_createTextVNode(\" Adjust the \"), /*#__PURE__*/_createElementVNode(\"strong\", null, \"Text Seperator\"), /*#__PURE__*/_createTextVNode(\" break your content correctly into entries \")]), /*#__PURE__*/_createElementVNode(\"li\", null, [/*#__PURE__*/_createTextVNode(\" Use the \"), /*#__PURE__*/_createElementVNode(\"strong\", null, \"Tags\"), /*#__PURE__*/_createTextVNode(\" menu to Export/Import tags to share with your team \")])], -1 /* HOISTED */);\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"p\", null, [/*#__PURE__*/_createTextVNode(\" See the spaCy documentation \"), /*#__PURE__*/_createElementVNode(\"a\", {\n  href: \"https://spacy.io/api/data-formats#json-input\"\n}, \"here\"), /*#__PURE__*/_createTextVNode(\" on how to convert the annotations from JSON to DocBin format. \")], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_q_icon = _resolveComponent(\"q-icon\");\n  const _component_q_file = _resolveComponent(\"q-file\");\n  const _component_q_separator = _resolveComponent(\"q-separator\");\n  const _component_q_img = _resolveComponent(\"q-img\");\n  const _component_q_timeline_entry = _resolveComponent(\"q-timeline-entry\");\n  const _component_q_timeline = _resolveComponent(\"q-timeline\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_q_file, {\n    modelValue: $data.textFile,\n    \"onUpdate:modelValue\": [_cache[0] || (_cache[0] = $event => $data.textFile = $event), $options.onFileSelected],\n    accept: \".txt\",\n    onRejected: $options.fileSelectionError,\n    filled: \"\",\n    label: \"Open a text file to begin\",\n    \"bg-color\": \"light-blue-1\"\n  }, {\n    prepend: _withCtx(() => [_createVNode(_component_q_icon, {\n      name: \"fas fa-upload\"\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\", \"onRejected\", \"onUpdate:modelValue\"]), _hoisted_5])]), _createVNode(_component_q_separator), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_hoisted_8, _createVNode(_component_q_timeline, null, {\n    default: _withCtx(() => [_createVNode(_component_q_timeline_entry, {\n      subtitle: \"Step 1\",\n      title: \"Load your text file with contents to annotate\",\n      icon: \"fa fa-upload\",\n      color: \"yellow-8\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_q_img, {\n        src: _imports_0,\n        \"spinner-color\": \"white\",\n        class: \"rounded-borders\",\n        style: {\n          \"border\": \"1px solid #ccc\",\n          \"width\": \"80%\"\n        }\n      }), _hoisted_9, _hoisted_10]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_q_timeline_entry, {\n      subtitle: \"Step 2\",\n      title: \"Create some tags and start tagging your text\",\n      icon: \"fa fa-tag\",\n      color: \"orange-6\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_q_img, {\n        src: _imports_1,\n        \"spinner-color\": \"white\",\n        class: \"rounded-borders\",\n        style: {\n          \"border\": \"1px solid #ccc\"\n        }\n      }), _hoisted_11]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_q_timeline_entry, {\n      subtitle: \"Step 3\",\n      title: \"Download your annotations as a JSON file that can be used for training\",\n      icon: \"fa fa-download\",\n      color: \"red-6\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_q_img, {\n        src: _imports_2,\n        \"spinner-color\": \"white\",\n        class: \"rounded-borders\",\n        style: {\n          \"border\": \"1px solid #ccc\",\n          \"width\": \"70%\"\n        }\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_q_timeline_entry, {\n      subtitle: \"Finally\",\n      title: \"Convert to DocBin format and use it for training\",\n      icon: \"fa fa-file\",\n      color: \"red-10\"\n    }, {\n      default: _withCtx(() => [_hoisted_12]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  })])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_imports_0","_imports_1","_imports_2","class","style","_createElementVNode","href","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_createVNode","_component_q_file","$data","textFile","$event","$options","onFileSelected","accept","onRejected","fileSelectionError","filled","label","prepend","_withCtx","_component_q_icon","name","_hoisted_5","_component_q_separator","_hoisted_6","_hoisted_7","_hoisted_8","_component_q_timeline","_component_q_timeline_entry","subtitle","title","icon","color","_component_q_img","src","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12"],"sources":["C:\\Users\\Filip\\GIT_PROJECTS\\annotator_with_packages\\src\\components\\StartPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"q-mx-auto q-my-xl\" style=\"max-width: 600px\">\r\n    <h5 class=\"text-h5\">NER Text Annotator</h5>\r\n    <p class=\"text-subtitle1 text-grey-7\">\r\n      Annotate text for spaCy NER Model training\r\n    </p>\r\n\r\n    <div class=\"q-my-xl q-py-md\">\r\n      <q-file\r\n        v-model=\"textFile\"\r\n        accept=\".txt\"\r\n        @rejected=\"fileSelectionError\"\r\n        filled\r\n        @update:model-value=\"onFileSelected\"\r\n        label=\"Open a text file to begin\"\r\n        bg-color=\"light-blue-1\"\r\n      >\r\n        <template v-slot:prepend>\r\n          <q-icon name=\"fas fa-upload\" />\r\n        </template>\r\n      </q-file>\r\n      <p class=\"text-subtitle1 text-grey-7 q-my-sm\">\r\n        Hint: You can also drag and drop files into this window!\r\n      </p>\r\n    </div>\r\n  </div>\r\n  <q-separator />\r\n  <div class=\"bg-grey-1 q-pa-lg\">\r\n    <div class=\"q-mx-auto\" style=\"max-width: 600px\">\r\n      <h4 class=\"text-h4\">\r\n        How to use the NER Annotator?\r\n      </h4>\r\n      <q-timeline>\r\n        <q-timeline-entry\r\n          subtitle=\"Step 1\"\r\n          title=\"Load your text file with contents to annotate\"\r\n          icon=\"fa fa-upload\"\r\n          color=\"yellow-8\"\r\n        >\r\n          <q-img\r\n            src=\"@/assets/step-1.png\"\r\n            spinner-color=\"white\"\r\n            class=\"rounded-borders\"\r\n            style=\"border: 1px solid #ccc; width: 80%\"\r\n          />\r\n          <p class=\"text-subtitle1 q-my-md\">Tips to prepare the text file</p>\r\n          <ul>\r\n            <li>Break your content in paragraphs or passages</li>\r\n            <li>\r\n              Maintain a consistent seperator between the passages. <br />\r\n              Eg., newline, empty line or a text seperator like <code>---</code>\r\n            </li>\r\n            <li>\r\n              For large datasets, break the text into smaller files and tag them\r\n              seperately\r\n            </li>\r\n          </ul>\r\n        </q-timeline-entry>\r\n        <q-timeline-entry\r\n          subtitle=\"Step 2\"\r\n          title=\"Create some tags and start tagging your text\"\r\n          icon=\"fa fa-tag\"\r\n          color=\"orange-6\"\r\n        >\r\n          <q-img\r\n            src=\"@/assets/step-2.png\"\r\n            spinner-color=\"white\"\r\n            class=\"rounded-borders\"\r\n            style=\"border: 1px solid #ccc\"\r\n          />\r\n          <ul class=\"q-my-md\">\r\n            <li>Use the <strong>New Tag</strong> button to create new tags</li>\r\n            <li>\r\n              Use the <strong>Edit Tag</strong> button to remove unwanted tags\r\n            </li>\r\n            <li>\r\n              Click the <strong>Save</strong> button once you are done\r\n              annotating an entry and to move to the next one\r\n            </li>\r\n            <li>\r\n              Adjust the <strong>Text Seperator</strong> break your content\r\n              correctly into entries\r\n            </li>\r\n            <li>\r\n              Use the <strong>Tags</strong> menu to Export/Import tags to share\r\n              with your team\r\n            </li>\r\n          </ul>\r\n        </q-timeline-entry>\r\n        <q-timeline-entry\r\n          subtitle=\"Step 3\"\r\n          title=\"Download your annotations as a JSON file that can be used for training\"\r\n          icon=\"fa fa-download\"\r\n          color=\"red-6\"\r\n        >\r\n          <q-img\r\n            src=\"@/assets/step-3.png\"\r\n            spinner-color=\"white\"\r\n            class=\"rounded-borders\"\r\n            style=\"border: 1px solid #ccc; width: 70%\"\r\n          />\r\n        </q-timeline-entry>\r\n\r\n        <q-timeline-entry\r\n          subtitle=\"Finally\"\r\n          title=\"Convert to DocBin format and use it for training\"\r\n          icon=\"fa fa-file\"\r\n          color=\"red-10\"\r\n        >\r\n          <p>\r\n            See the spaCy documentation\r\n            <a href=\"https://spacy.io/api/data-formats#json-input\">here</a> on\r\n            how to convert the annotations from JSON to DocBin format.\r\n          </p>\r\n        </q-timeline-entry>\r\n      </q-timeline>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapMutations } from \"vuex\";\r\n\r\nexport default {\r\n  name: \"StartPage\",\r\n  emits: [\"file-loaded\"],\r\n  data() {\r\n    return {\r\n      textFile: null,\r\n    };\r\n  },\r\n  methods: {\r\n    ...mapMutations([\"setInputSentences\"]),\r\n    onFileSelected(file) {\r\n      try {\r\n        let reader = new FileReader();\r\n        reader.addEventListener(\"load\", (event) => {\r\n          this.setInputSentences(event.target.result);\r\n          this.$emit(\"file-loaded\");\r\n        });\r\n        reader.readAsText(file);\r\n      } catch(e) {\r\n        this.fileSelectionError();\r\n      }\r\n    },\r\n    fileSelectionError() {\r\n      this.$q.notify({\r\n        icon: \"fas fa-exclamation-circle\",\r\n        message: \"Invalid file\",\r\n        color: \"red-6\",\r\n        position: \"top\",\r\n        timeout: 2000,\r\n        actions: [{label: \"Dismiss\", color: \"white\"}],\r\n      });\r\n    }\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}