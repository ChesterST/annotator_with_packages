{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { h, ref, markRaw, TransitionGroup } from 'vue';\nimport QAvatar from '../components/avatar/QAvatar.js';\nimport QIcon from '../components/icon/QIcon.js';\nimport QBtn from '../components/btn/QBtn.js';\nimport QSpinner from '../components/spinner/QSpinner.js';\nimport { createComponent } from '../utils/private/create.js';\nimport { noop } from '../utils/event.js';\nimport { createGlobalNode } from '../utils/private/global-nodes.js';\nimport { createChildApp } from '../install-quasar.js';\nimport { isObject } from '../utils/is.js';\nlet uid = 0;\nconst defaults = {};\nconst groups = {};\nconst notificationsList = {};\nconst positionClass = {};\nconst emptyRE = /^\\s*$/;\nconst notifRefs = [];\nconst positionList = ['top-left', 'top-right', 'bottom-left', 'bottom-right', 'top', 'bottom', 'left', 'right', 'center'];\nconst badgePositions = ['top-left', 'top-right', 'bottom-left', 'bottom-right'];\nconst notifTypes = {\n  positive: {\n    icon: $q => $q.iconSet.type.positive,\n    color: 'positive'\n  },\n  negative: {\n    icon: $q => $q.iconSet.type.negative,\n    color: 'negative'\n  },\n  warning: {\n    icon: $q => $q.iconSet.type.warning,\n    color: 'warning',\n    textColor: 'dark'\n  },\n  info: {\n    icon: $q => $q.iconSet.type.info,\n    color: 'info'\n  },\n  ongoing: {\n    group: false,\n    timeout: 0,\n    spinner: true,\n    color: 'grey-8'\n  }\n};\nfunction addNotification(config, $q, originalApi) {\n  if (!config) {\n    return logError('parameter required');\n  }\n  let Api;\n  const notif = {\n    textColor: 'white'\n  };\n  if (config.ignoreDefaults !== true) {\n    Object.assign(notif, defaults);\n  }\n  if (isObject(config) === false) {\n    if (notif.type) {\n      Object.assign(notif, notifTypes[notif.type]);\n    }\n    config = {\n      message: config\n    };\n  }\n  Object.assign(notif, notifTypes[config.type || notif.type], config);\n  if (typeof notif.icon === 'function') {\n    notif.icon = notif.icon($q);\n  }\n  if (!notif.spinner) {\n    notif.spinner = false;\n  } else {\n    if (notif.spinner === true) {\n      notif.spinner = QSpinner;\n    }\n    notif.spinner = markRaw(notif.spinner);\n  }\n  notif.meta = {\n    hasMedia: Boolean(notif.spinner !== false || notif.icon || notif.avatar),\n    hasText: hasContent(notif.message) || hasContent(notif.caption)\n  };\n  if (notif.position) {\n    if (positionList.includes(notif.position) === false) {\n      return logError('wrong position', config);\n    }\n  } else {\n    notif.position = 'bottom';\n  }\n  if (notif.timeout === void 0) {\n    notif.timeout = 5000;\n  } else {\n    const t = parseInt(notif.timeout, 10);\n    if (isNaN(t) || t < 0) {\n      return logError('wrong timeout', config);\n    }\n    notif.timeout = t;\n  }\n  if (notif.timeout === 0) {\n    notif.progress = false;\n  } else if (notif.progress === true) {\n    notif.meta.progressClass = 'q-notification__progress' + (notif.progressClass ? ` ${notif.progressClass}` : '');\n    notif.meta.progressStyle = {\n      animationDuration: `${notif.timeout + 1000}ms`\n    };\n  }\n  const actions = (Array.isArray(config.actions) === true ? config.actions : []).concat(config.ignoreDefaults !== true && Array.isArray(defaults.actions) === true ? defaults.actions : []).concat(notifTypes[config.type] !== void 0 && Array.isArray(notifTypes[config.type].actions) === true ? notifTypes[config.type].actions : []);\n  const {\n    closeBtn\n  } = notif;\n  closeBtn && actions.push({\n    label: typeof closeBtn === 'string' ? closeBtn : $q.lang.label.close\n  });\n  notif.actions = actions.map(({\n    handler,\n    noDismiss,\n    ...item\n  }) => ({\n    flat: true,\n    ...item,\n    onClick: typeof handler === 'function' ? () => {\n      handler();\n      noDismiss !== true && dismiss();\n    } : () => {\n      dismiss();\n    }\n  }));\n  if (notif.multiLine === void 0) {\n    notif.multiLine = notif.actions.length > 1;\n  }\n  Object.assign(notif.meta, {\n    class: 'q-notification row items-stretch' + ` q-notification--${notif.multiLine === true ? 'multi-line' : 'standard'}` + (notif.color !== void 0 ? ` bg-${notif.color}` : '') + (notif.textColor !== void 0 ? ` text-${notif.textColor}` : '') + (notif.classes !== void 0 ? ` ${notif.classes}` : ''),\n    wrapperClass: 'q-notification__wrapper col relative-position border-radius-inherit ' + (notif.multiLine === true ? 'column no-wrap justify-center' : 'row items-center'),\n    contentClass: 'q-notification__content row items-center' + (notif.multiLine === true ? '' : ' col'),\n    leftClass: notif.meta.hasText === true ? 'additional' : 'single',\n    attrs: {\n      role: 'alert',\n      ...notif.attrs\n    }\n  });\n  if (notif.group === false) {\n    notif.group = void 0;\n    notif.meta.group = void 0;\n  } else {\n    if (notif.group === void 0 || notif.group === true) {\n      // do not replace notifications with different buttons\n      notif.group = [notif.message, notif.caption, notif.multiline].concat(notif.actions.map(props => `${props.label}*${props.icon}`)).join('|');\n    }\n    notif.meta.group = notif.group + '|' + notif.position;\n  }\n  if (notif.actions.length === 0) {\n    notif.actions = void 0;\n  } else {\n    notif.meta.actionsClass = 'q-notification__actions row items-center ' + (notif.multiLine === true ? 'justify-end' : 'col-auto') + (notif.meta.hasMedia === true ? ' q-notification__actions--with-media' : '');\n  }\n  if (originalApi !== void 0) {\n    // reset timeout if any\n    if (originalApi.notif.meta.timer) {\n      clearTimeout(originalApi.notif.meta.timer);\n      originalApi.notif.meta.timer = void 0;\n    }\n\n    // retain uid\n    notif.meta.uid = originalApi.notif.meta.uid;\n\n    // replace notif\n    const index = notificationsList[notif.position].value.indexOf(originalApi.notif);\n    notificationsList[notif.position].value[index] = notif;\n  } else {\n    const original = groups[notif.meta.group];\n\n    // woohoo, it's a new notification\n    if (original === void 0) {\n      notif.meta.uid = uid++;\n      notif.meta.badge = 1;\n      if (['left', 'right', 'center'].indexOf(notif.position) !== -1) {\n        notificationsList[notif.position].value.splice(Math.floor(notificationsList[notif.position].value.length / 2), 0, notif);\n      } else {\n        const action = notif.position.indexOf('top') > -1 ? 'unshift' : 'push';\n        notificationsList[notif.position].value[action](notif);\n      }\n      if (notif.group !== void 0) {\n        groups[notif.meta.group] = notif;\n      }\n    }\n    // ok, so it's NOT a new one\n    else {\n      // reset timeout if any\n      if (original.meta.timer) {\n        clearTimeout(original.meta.timer);\n        original.meta.timer = void 0;\n      }\n      if (notif.badgePosition !== void 0) {\n        if (badgePositions.includes(notif.badgePosition) === false) {\n          return logError('wrong badgePosition', config);\n        }\n      } else {\n        notif.badgePosition = `top-${notif.position.indexOf('left') > -1 ? 'right' : 'left'}`;\n      }\n      notif.meta.uid = original.meta.uid;\n      notif.meta.badge = original.meta.badge + 1;\n      notif.meta.badgeClass = `q-notification__badge q-notification__badge--${notif.badgePosition}` + (notif.badgeColor !== void 0 ? ` bg-${notif.badgeColor}` : '') + (notif.badgeTextColor !== void 0 ? ` text-${notif.badgeTextColor}` : '') + (notif.badgeClass ? ` ${notif.badgeClass}` : '');\n      const index = notificationsList[notif.position].value.indexOf(original);\n      notificationsList[notif.position].value[index] = groups[notif.meta.group] = notif;\n    }\n  }\n  const dismiss = () => {\n    removeNotification(notif);\n    Api = void 0;\n  };\n  if (notif.timeout > 0) {\n    notif.meta.timer = setTimeout(() => {\n      notif.meta.timer = void 0;\n      dismiss();\n    }, notif.timeout + /* show duration */1000);\n  }\n\n  // only non-groupable can be updated\n  if (notif.group !== void 0) {\n    return props => {\n      if (props !== void 0) {\n        logError('trying to update a grouped one which is forbidden', config);\n      } else {\n        dismiss();\n      }\n    };\n  }\n  Api = {\n    dismiss,\n    config,\n    notif\n  };\n  if (originalApi !== void 0) {\n    Object.assign(originalApi, Api);\n    return;\n  }\n  return props => {\n    // if notification wasn't previously dismissed\n    if (Api !== void 0) {\n      // if no params, then we must dismiss the notification\n      if (props === void 0) {\n        Api.dismiss();\n      }\n      // otherwise we're updating it\n      else {\n        const newNotif = Object.assign({}, Api.config, props, {\n          group: false,\n          position: notif.position\n        });\n        addNotification(newNotif, $q, Api);\n      }\n    }\n  };\n}\nfunction removeNotification(notif) {\n  if (notif.meta.timer) {\n    clearTimeout(notif.meta.timer);\n    notif.meta.timer = void 0;\n  }\n  const index = notificationsList[notif.position].value.indexOf(notif);\n  if (index !== -1) {\n    if (notif.group !== void 0) {\n      delete groups[notif.meta.group];\n    }\n    const el = notifRefs['' + notif.meta.uid];\n    if (el) {\n      const {\n        width,\n        height\n      } = getComputedStyle(el);\n      el.style.left = `${el.offsetLeft}px`;\n      el.style.width = width;\n      el.style.height = height;\n    }\n    notificationsList[notif.position].value.splice(index, 1);\n    if (typeof notif.onDismiss === 'function') {\n      notif.onDismiss();\n    }\n  }\n}\nfunction hasContent(str) {\n  return str !== void 0 && str !== null && emptyRE.test(str) !== true;\n}\nfunction logError(error, config) {\n  console.error(`Notify: ${error}`, config);\n  return false;\n}\nfunction getComponent() {\n  return createComponent({\n    name: 'QNotifications',\n    // hide App from Vue devtools\n    devtools: {\n      hide: true\n    },\n    setup() {\n      return () => h('div', {\n        class: 'q-notifications'\n      }, positionList.map(pos => {\n        return h(TransitionGroup, {\n          key: pos,\n          class: positionClass[pos],\n          tag: 'div',\n          name: `q-notification--${pos}`\n        }, () => notificationsList[pos].value.map(notif => {\n          const meta = notif.meta;\n          const mainChild = [];\n          if (meta.hasMedia === true) {\n            if (notif.spinner !== false) {\n              mainChild.push(h(notif.spinner, {\n                class: 'q-notification__spinner q-notification__spinner--' + meta.leftClass,\n                color: notif.spinnerColor,\n                size: notif.spinnerSize\n              }));\n            } else if (notif.icon) {\n              mainChild.push(h(QIcon, {\n                class: 'q-notification__icon q-notification__icon--' + meta.leftClass,\n                name: notif.icon,\n                color: notif.iconColor,\n                size: notif.iconSize,\n                role: 'img'\n              }));\n            } else if (notif.avatar) {\n              mainChild.push(h(QAvatar, {\n                class: 'q-notification__avatar q-notification__avatar--' + meta.leftClass\n              }, () => h('img', {\n                src: notif.avatar,\n                'aria-hidden': 'true'\n              })));\n            }\n          }\n          if (meta.hasText === true) {\n            let msgChild;\n            const msgData = {\n              class: 'q-notification__message col'\n            };\n            if (notif.html === true) {\n              msgData.innerHTML = notif.caption ? `<div>${notif.message}</div><div class=\"q-notification__caption\">${notif.caption}</div>` : notif.message;\n            } else {\n              const msgNode = [notif.message];\n              msgChild = notif.caption ? [h('div', msgNode), h('div', {\n                class: 'q-notification__caption'\n              }, [notif.caption])] : msgNode;\n            }\n            mainChild.push(h('div', msgData, msgChild));\n          }\n          const child = [h('div', {\n            class: meta.contentClass\n          }, mainChild)];\n          notif.progress === true && child.push(h('div', {\n            key: `${meta.uid}|p|${meta.badge}`,\n            class: meta.progressClass,\n            style: meta.progressStyle\n          }));\n          notif.actions !== void 0 && child.push(h('div', {\n            class: meta.actionsClass\n          }, notif.actions.map(props => h(QBtn, props))));\n          meta.badge > 1 && child.push(h('div', {\n            key: `${meta.uid}|${meta.badge}`,\n            class: notif.meta.badgeClass,\n            style: notif.badgeStyle\n          }, [meta.badge]));\n          return h('div', {\n            ref: el => {\n              notifRefs['' + meta.uid] = el;\n            },\n            key: meta.uid,\n            class: meta.class,\n            ...meta.attrs\n          }, [h('div', {\n            class: meta.wrapperClass\n          }, child)]);\n        }));\n      }));\n    }\n  });\n}\nexport default {\n  setDefaults(opts) {\n    if (__QUASAR_SSR_SERVER__ !== true) {\n      isObject(opts) === true && Object.assign(defaults, opts);\n    }\n  },\n  registerType(typeName, typeOpts) {\n    if (__QUASAR_SSR_SERVER__ !== true && isObject(typeOpts) === true) {\n      notifTypes[typeName] = typeOpts;\n    }\n  },\n  install({\n    $q,\n    parentApp\n  }) {\n    $q.notify = this.create = __QUASAR_SSR_SERVER__ ? noop : opts => addNotification(opts, $q);\n    $q.notify.setDefaults = this.setDefaults;\n    $q.notify.registerType = this.registerType;\n    if ($q.config.notify !== void 0) {\n      this.setDefaults($q.config.notify);\n    }\n    if (__QUASAR_SSR_SERVER__ !== true && this.__installed !== true) {\n      positionList.forEach(pos => {\n        notificationsList[pos] = ref([]);\n        const vert = ['left', 'center', 'right'].includes(pos) === true ? 'center' : pos.indexOf('top') > -1 ? 'top' : 'bottom',\n          align = pos.indexOf('left') > -1 ? 'start' : pos.indexOf('right') > -1 ? 'end' : 'center',\n          classes = ['left', 'right'].includes(pos) ? `items-${pos === 'left' ? 'start' : 'end'} justify-center` : pos === 'center' ? 'flex-center' : `items-${align}`;\n        positionClass[pos] = `q-notifications__list q-notifications__list--${vert} fixed column no-wrap ${classes}`;\n      });\n      const el = createGlobalNode('q-notify');\n      createChildApp(getComponent(), parentApp).mount(el);\n    }\n  }\n};","map":{"version":3,"names":["h","ref","markRaw","TransitionGroup","QAvatar","QIcon","QBtn","QSpinner","createComponent","noop","createGlobalNode","createChildApp","isObject","uid","defaults","groups","notificationsList","positionClass","emptyRE","notifRefs","positionList","badgePositions","notifTypes","positive","icon","$q","iconSet","type","color","negative","warning","textColor","info","ongoing","group","timeout","spinner","addNotification","config","originalApi","logError","Api","notif","ignoreDefaults","Object","assign","message","meta","hasMedia","Boolean","avatar","hasText","hasContent","caption","position","includes","t","parseInt","isNaN","progress","progressClass","progressStyle","animationDuration","actions","Array","isArray","concat","closeBtn","push","label","lang","close","map","handler","noDismiss","item","flat","onClick","dismiss","multiLine","length","class","classes","wrapperClass","contentClass","leftClass","attrs","role","multiline","props","join","actionsClass","timer","clearTimeout","index","value","indexOf","original","badge","splice","Math","floor","action","badgePosition","badgeClass","badgeColor","badgeTextColor","removeNotification","setTimeout","newNotif","el","width","height","getComputedStyle","style","left","offsetLeft","onDismiss","str","test","error","console","getComponent","name","devtools","hide","setup","pos","key","tag","mainChild","spinnerColor","size","spinnerSize","iconColor","iconSize","src","msgChild","msgData","html","innerHTML","msgNode","child","badgeStyle","setDefaults","opts","__QUASAR_SSR_SERVER__","registerType","typeName","typeOpts","install","parentApp","notify","create","__installed","forEach","vert","align","mount"],"sources":["C:/Users/Filip/GIT_PROJECTS/annotator_with_packages/node_modules/quasar/src/plugins/Notify.js"],"sourcesContent":["import { h, ref, markRaw, TransitionGroup } from 'vue'\n\nimport QAvatar from '../components/avatar/QAvatar.js'\nimport QIcon from '../components/icon/QIcon.js'\nimport QBtn from '../components/btn/QBtn.js'\nimport QSpinner from '../components/spinner/QSpinner.js'\n\nimport { createComponent } from '../utils/private/create.js'\nimport { noop } from '../utils/event.js'\nimport { createGlobalNode } from '../utils/private/global-nodes.js'\nimport { createChildApp } from '../install-quasar.js'\nimport { isObject } from '../utils/is.js'\n\nlet uid = 0\n\nconst defaults = {}\nconst groups = {}\nconst notificationsList = {}\nconst positionClass = {}\nconst emptyRE = /^\\s*$/\nconst notifRefs = []\n\nconst positionList = [\n  'top-left', 'top-right',\n  'bottom-left', 'bottom-right',\n  'top', 'bottom', 'left', 'right', 'center'\n]\n\nconst badgePositions = [\n  'top-left', 'top-right',\n  'bottom-left', 'bottom-right'\n]\n\nconst notifTypes = {\n  positive: {\n    icon: $q => $q.iconSet.type.positive,\n    color: 'positive'\n  },\n\n  negative: {\n    icon: $q => $q.iconSet.type.negative,\n    color: 'negative'\n  },\n\n  warning: {\n    icon: $q => $q.iconSet.type.warning,\n    color: 'warning',\n    textColor: 'dark'\n  },\n\n  info: {\n    icon: $q => $q.iconSet.type.info,\n    color: 'info'\n  },\n\n  ongoing: {\n    group: false,\n    timeout: 0,\n    spinner: true,\n    color: 'grey-8'\n  }\n}\n\nfunction addNotification (config, $q, originalApi) {\n  if (!config) {\n    return logError('parameter required')\n  }\n\n  let Api\n  const notif = { textColor: 'white' }\n\n  if (config.ignoreDefaults !== true) {\n    Object.assign(notif, defaults)\n  }\n\n  if (isObject(config) === false) {\n    if (notif.type) {\n      Object.assign(notif, notifTypes[ notif.type ])\n    }\n\n    config = { message: config }\n  }\n\n  Object.assign(notif, notifTypes[ config.type || notif.type ], config)\n\n  if (typeof notif.icon === 'function') {\n    notif.icon = notif.icon($q)\n  }\n\n  if (!notif.spinner) {\n    notif.spinner = false\n  }\n  else {\n    if (notif.spinner === true) {\n      notif.spinner = QSpinner\n    }\n\n    notif.spinner = markRaw(notif.spinner)\n  }\n\n  notif.meta = {\n    hasMedia: Boolean(notif.spinner !== false || notif.icon || notif.avatar),\n    hasText: hasContent(notif.message) || hasContent(notif.caption)\n  }\n\n  if (notif.position) {\n    if (positionList.includes(notif.position) === false) {\n      return logError('wrong position', config)\n    }\n  }\n  else {\n    notif.position = 'bottom'\n  }\n\n  if (notif.timeout === void 0) {\n    notif.timeout = 5000\n  }\n  else {\n    const t = parseInt(notif.timeout, 10)\n    if (isNaN(t) || t < 0) {\n      return logError('wrong timeout', config)\n    }\n    notif.timeout = t\n  }\n\n  if (notif.timeout === 0) {\n    notif.progress = false\n  }\n  else if (notif.progress === true) {\n    notif.meta.progressClass = 'q-notification__progress' + (\n      notif.progressClass\n        ? ` ${ notif.progressClass }`\n        : ''\n    )\n\n    notif.meta.progressStyle = {\n      animationDuration: `${ notif.timeout + 1000 }ms`\n    }\n  }\n\n  const actions = (\n    Array.isArray(config.actions) === true\n      ? config.actions\n      : []\n  ).concat(\n    config.ignoreDefaults !== true && Array.isArray(defaults.actions) === true\n      ? defaults.actions\n      : []\n  ).concat(\n    notifTypes[ config.type ] !== void 0 && Array.isArray(notifTypes[ config.type ].actions) === true\n      ? notifTypes[ config.type ].actions\n      : []\n  )\n\n  const { closeBtn } = notif\n  closeBtn && actions.push({\n    label: typeof closeBtn === 'string'\n      ? closeBtn\n      : $q.lang.label.close\n  })\n\n  notif.actions = actions.map(({ handler, noDismiss, ...item }) => ({\n    flat: true,\n    ...item,\n    onClick: typeof handler === 'function'\n      ? () => {\n          handler()\n          noDismiss !== true && dismiss()\n        }\n      : () => { dismiss() }\n  }))\n\n  if (notif.multiLine === void 0) {\n    notif.multiLine = notif.actions.length > 1\n  }\n\n  Object.assign(notif.meta, {\n    class: 'q-notification row items-stretch'\n      + ` q-notification--${ notif.multiLine === true ? 'multi-line' : 'standard' }`\n      + (notif.color !== void 0 ? ` bg-${ notif.color }` : '')\n      + (notif.textColor !== void 0 ? ` text-${ notif.textColor }` : '')\n      + (notif.classes !== void 0 ? ` ${ notif.classes }` : ''),\n\n    wrapperClass: 'q-notification__wrapper col relative-position border-radius-inherit '\n      + (notif.multiLine === true ? 'column no-wrap justify-center' : 'row items-center'),\n\n    contentClass: 'q-notification__content row items-center'\n      + (notif.multiLine === true ? '' : ' col'),\n\n    leftClass: notif.meta.hasText === true ? 'additional' : 'single',\n\n    attrs: {\n      role: 'alert',\n      ...notif.attrs\n    }\n  })\n\n  if (notif.group === false) {\n    notif.group = void 0\n    notif.meta.group = void 0\n  }\n  else {\n    if (notif.group === void 0 || notif.group === true) {\n      // do not replace notifications with different buttons\n      notif.group = [\n        notif.message,\n        notif.caption,\n        notif.multiline\n      ].concat(\n        notif.actions.map(props => `${ props.label }*${ props.icon }`)\n      ).join('|')\n    }\n\n    notif.meta.group = notif.group + '|' + notif.position\n  }\n\n  if (notif.actions.length === 0) {\n    notif.actions = void 0\n  }\n  else {\n    notif.meta.actionsClass = 'q-notification__actions row items-center '\n      + (notif.multiLine === true ? 'justify-end' : 'col-auto')\n      + (notif.meta.hasMedia === true ? ' q-notification__actions--with-media' : '')\n  }\n\n  if (originalApi !== void 0) {\n    // reset timeout if any\n    if (originalApi.notif.meta.timer) {\n      clearTimeout(originalApi.notif.meta.timer)\n      originalApi.notif.meta.timer = void 0\n    }\n\n    // retain uid\n    notif.meta.uid = originalApi.notif.meta.uid\n\n    // replace notif\n    const index = notificationsList[ notif.position ].value.indexOf(originalApi.notif)\n    notificationsList[ notif.position ].value[ index ] = notif\n  }\n  else {\n    const original = groups[ notif.meta.group ]\n\n    // woohoo, it's a new notification\n    if (original === void 0) {\n      notif.meta.uid = uid++\n      notif.meta.badge = 1\n\n      if ([ 'left', 'right', 'center' ].indexOf(notif.position) !== -1) {\n        notificationsList[ notif.position ].value.splice(\n          Math.floor(notificationsList[ notif.position ].value.length / 2),\n          0,\n          notif\n        )\n      }\n      else {\n        const action = notif.position.indexOf('top') > -1 ? 'unshift' : 'push'\n        notificationsList[ notif.position ].value[ action ](notif)\n      }\n\n      if (notif.group !== void 0) {\n        groups[ notif.meta.group ] = notif\n      }\n    }\n    // ok, so it's NOT a new one\n    else {\n      // reset timeout if any\n      if (original.meta.timer) {\n        clearTimeout(original.meta.timer)\n        original.meta.timer = void 0\n      }\n\n      if (notif.badgePosition !== void 0) {\n        if (badgePositions.includes(notif.badgePosition) === false) {\n          return logError('wrong badgePosition', config)\n        }\n      }\n      else {\n        notif.badgePosition = `top-${ notif.position.indexOf('left') > -1 ? 'right' : 'left' }`\n      }\n\n      notif.meta.uid = original.meta.uid\n      notif.meta.badge = original.meta.badge + 1\n      notif.meta.badgeClass = `q-notification__badge q-notification__badge--${ notif.badgePosition }`\n        + (notif.badgeColor !== void 0 ? ` bg-${ notif.badgeColor }` : '')\n        + (notif.badgeTextColor !== void 0 ? ` text-${ notif.badgeTextColor }` : '')\n        + (notif.badgeClass ? ` ${ notif.badgeClass }` : '')\n\n      const index = notificationsList[ notif.position ].value.indexOf(original)\n      notificationsList[ notif.position ].value[ index ] = groups[ notif.meta.group ] = notif\n    }\n  }\n\n  const dismiss = () => {\n    removeNotification(notif)\n    Api = void 0\n  }\n\n  if (notif.timeout > 0) {\n    notif.meta.timer = setTimeout(() => {\n      notif.meta.timer = void 0\n      dismiss()\n    }, notif.timeout + /* show duration */ 1000)\n  }\n\n  // only non-groupable can be updated\n  if (notif.group !== void 0) {\n    return props => {\n      if (props !== void 0) {\n        logError('trying to update a grouped one which is forbidden', config)\n      }\n      else {\n        dismiss()\n      }\n    }\n  }\n\n  Api = {\n    dismiss,\n    config,\n    notif\n  }\n\n  if (originalApi !== void 0) {\n    Object.assign(originalApi, Api)\n    return\n  }\n\n  return props => {\n    // if notification wasn't previously dismissed\n    if (Api !== void 0) {\n      // if no params, then we must dismiss the notification\n      if (props === void 0) {\n        Api.dismiss()\n      }\n      // otherwise we're updating it\n      else {\n        const newNotif = Object.assign({}, Api.config, props, {\n          group: false,\n          position: notif.position\n        })\n\n        addNotification(newNotif, $q, Api)\n      }\n    }\n  }\n}\n\nfunction removeNotification (notif) {\n  if (notif.meta.timer) {\n    clearTimeout(notif.meta.timer)\n    notif.meta.timer = void 0\n  }\n\n  const index = notificationsList[ notif.position ].value.indexOf(notif)\n  if (index !== -1) {\n    if (notif.group !== void 0) {\n      delete groups[ notif.meta.group ]\n    }\n\n    const el = notifRefs[ '' + notif.meta.uid ]\n\n    if (el) {\n      const { width, height } = getComputedStyle(el)\n\n      el.style.left = `${ el.offsetLeft }px`\n      el.style.width = width\n      el.style.height = height\n    }\n\n    notificationsList[ notif.position ].value.splice(index, 1)\n\n    if (typeof notif.onDismiss === 'function') {\n      notif.onDismiss()\n    }\n  }\n}\n\nfunction hasContent (str) {\n  return str !== void 0\n    && str !== null\n    && emptyRE.test(str) !== true\n}\n\nfunction logError (error, config) {\n  console.error(`Notify: ${ error }`, config)\n  return false\n}\n\nfunction getComponent () {\n  return createComponent({\n    name: 'QNotifications',\n\n    // hide App from Vue devtools\n    devtools: { hide: true },\n\n    setup () {\n      return () => h('div', { class: 'q-notifications' }, positionList.map(pos => {\n        return h(TransitionGroup, {\n          key: pos,\n          class: positionClass[ pos ],\n          tag: 'div',\n          name: `q-notification--${ pos }`\n        }, () => notificationsList[ pos ].value.map(notif => {\n          const meta = notif.meta\n          const mainChild = []\n\n          if (meta.hasMedia === true) {\n            if (notif.spinner !== false) {\n              mainChild.push(\n                h(notif.spinner, {\n                  class: 'q-notification__spinner q-notification__spinner--' + meta.leftClass,\n                  color: notif.spinnerColor,\n                  size: notif.spinnerSize\n                })\n              )\n            }\n            else if (notif.icon) {\n              mainChild.push(\n                h(QIcon, {\n                  class: 'q-notification__icon q-notification__icon--' + meta.leftClass,\n                  name: notif.icon,\n                  color: notif.iconColor,\n                  size: notif.iconSize,\n                  role: 'img'\n                })\n              )\n            }\n            else if (notif.avatar) {\n              mainChild.push(\n                h(QAvatar, {\n                  class: 'q-notification__avatar q-notification__avatar--' + meta.leftClass\n                }, () => h('img', { src: notif.avatar, 'aria-hidden': 'true' }))\n              )\n            }\n          }\n\n          if (meta.hasText === true) {\n            let msgChild\n            const msgData = { class: 'q-notification__message col' }\n\n            if (notif.html === true) {\n              msgData.innerHTML = notif.caption\n                ? `<div>${ notif.message }</div><div class=\"q-notification__caption\">${ notif.caption }</div>`\n                : notif.message\n            }\n            else {\n              const msgNode = [ notif.message ]\n              msgChild = notif.caption\n                ? [\n                    h('div', msgNode),\n                    h('div', { class: 'q-notification__caption' }, [ notif.caption ])\n                  ]\n                : msgNode\n            }\n\n            mainChild.push(\n              h('div', msgData, msgChild)\n            )\n          }\n\n          const child = [\n            h('div', { class: meta.contentClass }, mainChild)\n          ]\n\n          notif.progress === true && child.push(\n            h('div', {\n              key: `${ meta.uid }|p|${ meta.badge }`,\n              class: meta.progressClass,\n              style: meta.progressStyle\n            })\n          )\n\n          notif.actions !== void 0 && child.push(\n            h('div', {\n              class: meta.actionsClass\n            }, notif.actions.map(props => h(QBtn, props)))\n          )\n\n          meta.badge > 1 && child.push(\n            h('div', {\n              key: `${ meta.uid }|${ meta.badge }`,\n              class: notif.meta.badgeClass,\n              style: notif.badgeStyle\n            }, [ meta.badge ])\n          )\n\n          return h('div', {\n            ref: el => { notifRefs[ '' + meta.uid ] = el },\n            key: meta.uid,\n            class: meta.class,\n            ...meta.attrs\n          }, [\n            h('div', { class: meta.wrapperClass }, child)\n          ])\n        }))\n      }))\n    }\n  })\n}\n\nexport default {\n  setDefaults (opts) {\n    if (__QUASAR_SSR_SERVER__ !== true) {\n      isObject(opts) === true && Object.assign(defaults, opts)\n    }\n  },\n\n  registerType (typeName, typeOpts) {\n    if (__QUASAR_SSR_SERVER__ !== true && isObject(typeOpts) === true) {\n      notifTypes[ typeName ] = typeOpts\n    }\n  },\n\n  install ({ $q, parentApp }) {\n    $q.notify = this.create = __QUASAR_SSR_SERVER__\n      ? noop\n      : opts => addNotification(opts, $q)\n\n    $q.notify.setDefaults = this.setDefaults\n    $q.notify.registerType = this.registerType\n\n    if ($q.config.notify !== void 0) {\n      this.setDefaults($q.config.notify)\n    }\n\n    if (__QUASAR_SSR_SERVER__ !== true && this.__installed !== true) {\n      positionList.forEach(pos => {\n        notificationsList[ pos ] = ref([])\n\n        const\n          vert = [ 'left', 'center', 'right' ].includes(pos) === true ? 'center' : (pos.indexOf('top') > -1 ? 'top' : 'bottom'),\n          align = pos.indexOf('left') > -1 ? 'start' : (pos.indexOf('right') > -1 ? 'end' : 'center'),\n          classes = [ 'left', 'right' ].includes(pos) ? `items-${ pos === 'left' ? 'start' : 'end' } justify-center` : (pos === 'center' ? 'flex-center' : `items-${ align }`)\n\n        positionClass[ pos ] = `q-notifications__list q-notifications__list--${ vert } fixed column no-wrap ${ classes }`\n      })\n\n      const el = createGlobalNode('q-notify')\n      createChildApp(getComponent(), parentApp).mount(el)\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}