{"ast":null,"code":"import { mapMutations } from \"vuex\";\nexport default {\n  name: \"StartPage\",\n  emits: [\"file-loaded\"],\n  data() {\n    return {\n      textFile: null\n    };\n  },\n  methods: {\n    ...mapMutations([\"setInputSentences\"]),\n    onFileSelected(file) {\n      try {\n        let reader = new FileReader();\n        reader.addEventListener(\"load\", event => {\n          this.setInputSentences(event.target.result);\n          this.$emit(\"file-loaded\");\n        });\n        reader.readAsText(file);\n      } catch (e) {\n        this.fileSelectionError();\n      }\n    },\n    fileSelectionError() {\n      this.$q.notify({\n        icon: \"fas fa-exclamation-circle\",\n        message: \"Invalid file\",\n        color: \"red-6\",\n        position: \"top\",\n        timeout: 2000,\n        actions: [{\n          label: \"Dismiss\",\n          color: \"white\"\n        }]\n      });\n    }\n  }\n};","map":{"version":3,"names":["mapMutations","name","emits","data","textFile","methods","onFileSelected","file","reader","FileReader","addEventListener","event","setInputSentences","target","result","$emit","readAsText","e","fileSelectionError","$q","notify","icon","message","color","position","timeout","actions","label"],"sources":["C:\\Users\\Filip\\GIT_PROJECTS\\annotator_with_packages\\src\\components\\StartPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"q-mx-auto q-my-xl\" style=\"max-width: 600px\">\r\n    <h5 class=\"text-h5\">NER Text Annotator</h5>\r\n    <p class=\"text-subtitle1 text-grey-7\">\r\n      Annotate text for spaCy NER Model training\r\n    </p>\r\n\r\n    <div class=\"q-my-xl q-py-md\">\r\n      <q-file\r\n        v-model=\"textFile\"\r\n        accept=\".txt\"\r\n        @rejected=\"fileSelectionError\"\r\n        filled\r\n        @update:model-value=\"onFileSelected\"\r\n        label=\"Open a text file to begin\"\r\n        bg-color=\"light-blue-1\"\r\n      >\r\n        <template v-slot:prepend>\r\n          <q-icon name=\"fas fa-upload\" />\r\n        </template>\r\n      </q-file>\r\n      <p class=\"text-subtitle1 text-grey-7 q-my-sm\">\r\n        Hint: You can also drag and drop files into this window!\r\n      </p>\r\n    </div>\r\n  </div>\r\n  <q-separator />\r\n  <div class=\"bg-grey-1 q-pa-lg\">\r\n    <div class=\"q-mx-auto\" style=\"max-width: 600px\">\r\n      <h4 class=\"text-h4\">\r\n        How to use the NER Annotator?\r\n      </h4>\r\n      <q-timeline>\r\n        <q-timeline-entry\r\n          subtitle=\"Step 1\"\r\n          title=\"Load your text file with contents to annotate\"\r\n          icon=\"fa fa-upload\"\r\n          color=\"yellow-8\"\r\n        >\r\n          <q-img\r\n            src=\"@/assets/step-1.png\"\r\n            spinner-color=\"white\"\r\n            class=\"rounded-borders\"\r\n            style=\"border: 1px solid #ccc; width: 80%\"\r\n          />\r\n          <p class=\"text-subtitle1 q-my-md\">Tips to prepare the text file</p>\r\n          <ul>\r\n            <li>Break your content in paragraphs or passages</li>\r\n            <li>\r\n              Maintain a consistent seperator between the passages. <br />\r\n              Eg., newline, empty line or a text seperator like <code>---</code>\r\n            </li>\r\n            <li>\r\n              For large datasets, break the text into smaller files and tag them\r\n              seperately\r\n            </li>\r\n          </ul>\r\n        </q-timeline-entry>\r\n        <q-timeline-entry\r\n          subtitle=\"Step 2\"\r\n          title=\"Create some tags and start tagging your text\"\r\n          icon=\"fa fa-tag\"\r\n          color=\"orange-6\"\r\n        >\r\n          <q-img\r\n            src=\"@/assets/step-2.png\"\r\n            spinner-color=\"white\"\r\n            class=\"rounded-borders\"\r\n            style=\"border: 1px solid #ccc\"\r\n          />\r\n          <ul class=\"q-my-md\">\r\n            <li>Use the <strong>New Tag</strong> button to create new tags</li>\r\n            <li>\r\n              Use the <strong>Edit Tag</strong> button to remove unwanted tags\r\n            </li>\r\n            <li>\r\n              Click the <strong>Save</strong> button once you are done\r\n              annotating an entry and to move to the next one\r\n            </li>\r\n            <li>\r\n              Adjust the <strong>Text Seperator</strong> break your content\r\n              correctly into entries\r\n            </li>\r\n            <li>\r\n              Use the <strong>Tags</strong> menu to Export/Import tags to share\r\n              with your team\r\n            </li>\r\n          </ul>\r\n        </q-timeline-entry>\r\n        <q-timeline-entry\r\n          subtitle=\"Step 3\"\r\n          title=\"Download your annotations as a JSON file that can be used for training\"\r\n          icon=\"fa fa-download\"\r\n          color=\"red-6\"\r\n        >\r\n          <q-img\r\n            src=\"@/assets/step-3.png\"\r\n            spinner-color=\"white\"\r\n            class=\"rounded-borders\"\r\n            style=\"border: 1px solid #ccc; width: 70%\"\r\n          />\r\n        </q-timeline-entry>\r\n\r\n        <q-timeline-entry\r\n          subtitle=\"Finally\"\r\n          title=\"Convert to DocBin format and use it for training\"\r\n          icon=\"fa fa-file\"\r\n          color=\"red-10\"\r\n        >\r\n          <p>\r\n            See the spaCy documentation\r\n            <a href=\"https://spacy.io/api/data-formats#json-input\">here</a> on\r\n            how to convert the annotations from JSON to DocBin format.\r\n          </p>\r\n        </q-timeline-entry>\r\n      </q-timeline>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapMutations } from \"vuex\";\r\n\r\nexport default {\r\n  name: \"StartPage\",\r\n  emits: [\"file-loaded\"],\r\n  data() {\r\n    return {\r\n      textFile: null,\r\n    };\r\n  },\r\n  methods: {\r\n    ...mapMutations([\"setInputSentences\"]),\r\n    onFileSelected(file) {\r\n      try {\r\n        let reader = new FileReader();\r\n        reader.addEventListener(\"load\", (event) => {\r\n          this.setInputSentences(event.target.result);\r\n          this.$emit(\"file-loaded\");\r\n        });\r\n        reader.readAsText(file);\r\n      } catch(e) {\r\n        this.fileSelectionError();\r\n      }\r\n    },\r\n    fileSelectionError() {\r\n      this.$q.notify({\r\n        icon: \"fas fa-exclamation-circle\",\r\n        message: \"Invalid file\",\r\n        color: \"red-6\",\r\n        position: \"top\",\r\n        timeout: 2000,\r\n        actions: [{label: \"Dismiss\", color: \"white\"}],\r\n      });\r\n    }\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"AAyHA,SAASA,YAAW,QAAS,MAAM;AAEnC,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,KAAK,EAAE,CAAC,aAAa,CAAC;EACtBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,GAAGL,YAAY,CAAC,CAAC,mBAAmB,CAAC,CAAC;IACtCM,cAAcA,CAACC,IAAI,EAAE;MACnB,IAAI;QACF,IAAIC,MAAK,GAAI,IAAIC,UAAU,EAAE;QAC7BD,MAAM,CAACE,gBAAgB,CAAC,MAAM,EAAGC,KAAK,IAAK;UACzC,IAAI,CAACC,iBAAiB,CAACD,KAAK,CAACE,MAAM,CAACC,MAAM,CAAC;UAC3C,IAAI,CAACC,KAAK,CAAC,aAAa,CAAC;QAC3B,CAAC,CAAC;QACFP,MAAM,CAACQ,UAAU,CAACT,IAAI,CAAC;MACzB,EAAE,OAAMU,CAAC,EAAE;QACT,IAAI,CAACC,kBAAkB,EAAE;MAC3B;IACF,CAAC;IACDA,kBAAkBA,CAAA,EAAG;MACnB,IAAI,CAACC,EAAE,CAACC,MAAM,CAAC;QACbC,IAAI,EAAE,2BAA2B;QACjCC,OAAO,EAAE,cAAc;QACvBC,KAAK,EAAE,OAAO;QACdC,QAAQ,EAAE,KAAK;QACfC,OAAO,EAAE,IAAI;QACbC,OAAO,EAAE,CAAC;UAACC,KAAK,EAAE,SAAS;UAAEJ,KAAK,EAAE;QAAO,CAAC;MAC9C,CAAC,CAAC;IACJ;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}