{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-5df20692\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"q-pa-md\",\n  style: {\n    \"border-bottom\": \"1px solid #ccc\"\n  }\n};\nconst _hoisted_2 = {\n  class: \"row\"\n};\nconst _hoisted_3 = {\n  class: \"tags\"\n};\nconst _hoisted_4 = {\n  class: \"q-mx-md\"\n};\nconst _hoisted_5 = {\n  class: \"buttons\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_q_avatar = _resolveComponent(\"q-avatar\");\n  const _component_q_chip = _resolveComponent(\"q-chip\");\n  const _component_q_space = _resolveComponent(\"q-space\");\n  const _component_q_btn = _resolveComponent(\"q-btn\");\n  const _component_q_input = _resolveComponent(\"q-input\");\n  const _component_q_btn_group = _resolveComponent(\"q-btn-group\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.classes, (cl, index) => {\n    return _openBlock(), _createBlock(_component_q_chip, {\n      key: cl.id,\n      square: \"\",\n      color: cl.id === _ctx.currentClass.id ? cl.color : 'grey-3',\n      clickable: \"\",\n      onClick: $event => _ctx.setCurrentClass(index),\n      removable: $data.showDeleteButtons,\n      onRemove: $event => $options.handleRemoveClass(cl.id, cl.name)\n    }, {\n      default: _withCtx(() => [cl.id === _ctx.currentClass.id ? (_openBlock(), _createBlock(_component_q_avatar, {\n        key: 0,\n        color: cl.color.replace('11', '12'),\n        \"text-color\": \"white\",\n        icon: 'fa fa-check'\n      }, null, 8 /* PROPS */, [\"color\"])) : _createCommentVNode(\"v-if\", true), cl.id !== _ctx.currentClass.id ? (_openBlock(), _createBlock(_component_q_avatar, {\n        key: 1,\n        color: cl.color.replace('11', '12'),\n        \"text-color\": \"white\",\n        \"font-size\": \"16px\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(index + 1), 1 /* TEXT */)]),\n\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"color\"])) : _createCommentVNode(\"v-if\", true), _createTextVNode(\" \" + _toDisplayString(cl.name), 1 /* TEXT */)]),\n\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"color\", \"onClick\", \"removable\", \"onRemove\"]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createVNode(_component_q_space), _createElementVNode(\"div\", _hoisted_4, [$data.showNewClassInput || _ctx.classes.length === 0 ? (_openBlock(), _createBlock(_component_q_input, {\n    key: 0,\n    \"bottom-slots\": \"\",\n    modelValue: $data.newClassName,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.newClassName = $event),\n    hint: \"Enter a NER Tag and click [+] to add it\",\n    dense: \"\",\n    autofocus: \"\"\n  }, {\n    append: _withCtx(() => [_createVNode(_component_q_btn, {\n      round: \"\",\n      dense: \"\",\n      flat: \"\",\n      color: \"green-4\",\n      icon: \"fa fa-plus\",\n      onClick: $options.saveNewClass\n    }, null, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_q_btn, {\n      round: \"\",\n      color: \"red-4\",\n      dense: \"\",\n      flat: \"\",\n      icon: \"fa fa-times\",\n      onClick: _cache[0] || (_cache[0] = $event => $data.showNewClassInput = false)\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_q_btn_group, null, {\n    default: _withCtx(() => [_createVNode(_component_q_btn, {\n      outline: \"\",\n      onClick: _cache[2] || (_cache[2] = $event => $data.showNewClassInput = true),\n      label: \"New Tag\"\n    }), _createVNode(_component_q_btn, {\n      outline: \"\",\n      onClick: _cache[3] || (_cache[3] = $event => $data.showDeleteButtons = !$data.showDeleteButtons),\n      label: $data.showDeleteButtons ? 'Lock Tags' : 'Edit Tags'\n    }, null, 8 /* PROPS */, [\"label\"])]),\n    _: 1 /* STABLE */\n  })])])]);\n}","map":{"version":3,"names":["class","style","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_Fragment","_renderList","_ctx","classes","cl","index","_createBlock","_component_q_chip","key","id","square","color","currentClass","clickable","onClick","$event","setCurrentClass","removable","$data","showDeleteButtons","onRemove","$options","handleRemoveClass","name","_component_q_avatar","replace","icon","_toDisplayString","_createVNode","_component_q_space","_hoisted_4","showNewClassInput","length","_component_q_input","newClassName","hint","dense","autofocus","append","_withCtx","_component_q_btn","round","flat","saveNewClass","_cache","_hoisted_5","_component_q_btn_group","outline","label"],"sources":["C:\\Users\\Filip\\GIT_PROJECTS\\annotator_with_packages\\src\\components\\ClassesBlock.vue"],"sourcesContent":["<template>\r\n  <div class=\"q-pa-md\" style=\"border-bottom: 1px solid #ccc;\">\r\n    <div class=\"row\">\r\n      <div class=\"tags\">\r\n        <q-chip\r\n          v-for=\"(cl, index) in classes\"\r\n          :key=\"cl.id\"\r\n          square\r\n          :color=\"cl.id === currentClass.id ? cl.color : 'grey-3'\"\r\n          clickable\r\n          @click=\"setCurrentClass(index)\"\r\n          :removable=\"showDeleteButtons\"\r\n          @remove=\"handleRemoveClass(cl.id, cl.name)\"\r\n        >\r\n          <q-avatar\r\n            v-if=\"cl.id === currentClass.id\"\r\n            :color=\"cl.color.replace('11', '12')\"\r\n            text-color=\"white\"\r\n            :icon=\"'fa fa-check'\"\r\n          ></q-avatar>\r\n          <q-avatar\r\n            v-if=\"cl.id !== currentClass.id\"\r\n            :color=\"cl.color.replace('11', '12')\"\r\n            text-color=\"white\"\r\n            font-size=\"16px\"\r\n          >{{ index + 1 }}</q-avatar>\r\n          {{ cl.name }}\r\n        </q-chip>\r\n      </div>\r\n      <q-space></q-space>\r\n      <div class=\"q-mx-md\">\r\n        <q-input\r\n          bottom-slots\r\n          v-model=\"newClassName\"\r\n          v-if=\"showNewClassInput || classes.length === 0\"\r\n          hint=\"Enter a NER Tag and click [+] to add it\"\r\n          dense\r\n          autofocus\r\n        >\r\n          <template v-slot:append>\r\n            <q-btn\r\n              round\r\n              dense\r\n              flat\r\n              color=\"green-4\"\r\n              icon=\"fa fa-plus\"\r\n              @click=\"saveNewClass\"\r\n            />\r\n            <q-btn\r\n              round\r\n              color=\"red-4\"\r\n              dense\r\n              flat\r\n              icon=\"fa fa-times\"\r\n              @click=\"showNewClassInput = false\"\r\n            />\r\n          </template>\r\n        </q-input>\r\n      </div>\r\n      <div class=\"buttons\">\r\n        <q-btn-group>\r\n          <q-btn outline @click=\"showNewClassInput = true\" label=\"New Tag\" />\r\n          <q-btn\r\n            outline\r\n            @click=\"showDeleteButtons = !showDeleteButtons\"\r\n            :label=\"showDeleteButtons ? 'Lock Tags' : 'Edit Tags'\"\r\n          />\r\n        </q-btn-group>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState, mapMutations, mapActions } from \"vuex\";\r\nexport default {\r\n  name: \"ClassesBlock\",\r\n  data() {\r\n    return {\r\n      showNewClassInput: false,\r\n      newClassName: \"\",\r\n      showDeleteButtons: false,\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapState([\"classes\", \"currentClass\", \"enableKeyboardShortcuts\"]),\r\n  },\r\n  created() {\r\n    document.addEventListener('keydown', this.keypress);\r\n  },\r\n  watch: {\r\n    newClassName(now, then) {\r\n      if (now != then) {\r\n        this.newClassName = now.toUpperCase();\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n    ...mapMutations([\"setCurrentClass\"]),\r\n    ...mapActions([\"createNewClass\", \"deleteClass\"]),\r\n    keypress(event) {\r\n      if (!this.enableKeyboardShortcuts) {\r\n        return\r\n      }\r\n      var key = parseInt(event.key)\r\n      if (!key) {\r\n        return\r\n      }\r\n      if (key > this.classes.length) {\r\n        return\r\n      }\r\n      \r\n      this.setCurrentClass(key - 1);\r\n      return\r\n    },\r\n    handleRemoveClass(class_id, className) {\r\n      let sure = confirm(\r\n        \"Are you sure you want to remove the tag `\" +\r\n          className +\r\n          \"`?\\nNOTE: This will NOT affect previously tagged entities.\"\r\n      );\r\n      if (sure) {\r\n        this.deleteClass(class_id);\r\n      }\r\n    },\r\n    saveNewClass() {\r\n      if (!this.newClassName) {\r\n        return;\r\n      }\r\n      const self = this;\r\n      this.createNewClass(this.newClassName).then(() => {\r\n        self.showNewClassInput = false;\r\n        self.newClassName = \"\";\r\n      });\r\n    },\r\n    onInputKeyup(e) {\r\n      if (e.key === \"Enter\") {\r\n        this.saveNewClass();\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"css\" scoped>\r\n.color-box {\r\n  width: 1rem;\r\n  height: 1rem;\r\n  margin-right: 1rem;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}