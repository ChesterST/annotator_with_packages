{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveDynamicComponent as _resolveDynamicComponent, createBlock as _createBlock, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"q-pa-lg\",\n  style: {\n    \"height\": \"60vh\",\n    \"overflow-y\": \"scroll\"\n  }\n};\nconst _hoisted_2 = {\n  class: \"q-pa-md\",\n  style: {\n    \"border-top\": \"1px solid #ccc\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_classes_block = _resolveComponent(\"classes-block\");\n  const _component_q_btn = _resolveComponent(\"q-btn\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_classes_block), _createElementVNode(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.tm.tokens, t => {\n    return _openBlock(), _createBlock(_resolveDynamicComponent(t.type === 'token' ? 'Token' : 'TokenBlock'), {\n      id: 't' + t.start,\n      token: t,\n      key: t.start,\n      backgroundColor: t.backgroundColor,\n      onRemoveBlock: $options.onRemoveBlock\n    }, null, 40 /* PROPS, HYDRATE_EVENTS */, [\"id\", \"token\", \"backgroundColor\", \"onRemoveBlock\"]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_q_btn, {\n    color: \"red\",\n    outline: \"\",\n    class: \"q-mx-md\",\n    onClick: $options.resetBlocks,\n    label: \"Reset\"\n  }, null, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_q_btn, {\n    class: \"q-mx-md\",\n    outline: \"\",\n    onClick: $options.backOneSentence,\n    disabled: _ctx.currentIndex == 0,\n    label: \"Back\"\n  }, null, 8 /* PROPS */, [\"onClick\", \"disabled\"]), _createVNode(_component_q_btn, {\n    class: \"q-mx-md\",\n    outline: \"\",\n    onClick: $options.skipCurrentSentence,\n    label: \"Skip\"\n  }, null, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_q_btn, {\n    class: \"q-mx-md\",\n    color: \"green\",\n    outline: \"\",\n    onClick: $options.saveTags,\n    label: \"Save\"\n  }, null, 8 /* PROPS */, [\"onClick\"])])]);\n}","map":{"version":3,"names":["class","style","_createElementBlock","_createVNode","_component_classes_block","_createElementVNode","_hoisted_1","_Fragment","_renderList","_ctx","tm","tokens","t","_createBlock","_resolveDynamicComponent","type","id","start","token","key","backgroundColor","onRemoveBlock","$options","_hoisted_2","_component_q_btn","color","outline","onClick","resetBlocks","label","backOneSentence","disabled","currentIndex","skipCurrentSentence","saveTags"],"sources":["C:\\Users\\Filip\\GIT_PROJECTS\\annotator_with_packages\\src\\components\\AnnotationPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <classes-block />\r\n    <div class=\"q-pa-lg\" style=\"height:60vh; overflow-y:scroll;\">\r\n      <component\r\n        :is=\"t.type === 'token' ? 'Token' : 'TokenBlock'\"\r\n        :id=\"'t' + t.start\"\r\n        v-for=\"t in tm.tokens\"\r\n        :token=\"t\"\r\n        :key=\"t.start\"\r\n        :backgroundColor=\"t.backgroundColor\"\r\n        @remove-block=\"onRemoveBlock\"\r\n      />\r\n    </div>\r\n\r\n    <div class=\"q-pa-md\" style=\"border-top: 1px solid #ccc\">\r\n      <q-btn\r\n        color=\"red\"\r\n        outline\r\n        class=\"q-mx-md\"\r\n        @click=\"resetBlocks\"\r\n        label=\"Reset\"\r\n      />\r\n      <q-btn\r\n        class=\"q-mx-md\"\r\n        outline\r\n        @click=\"backOneSentence\"\r\n        :disabled=\"currentIndex == 0\"\r\n        label=\"Back\"\r\n      />\r\n      <q-btn\r\n        class=\"q-mx-md\"\r\n        outline\r\n        @click=\"skipCurrentSentence\"\r\n        label=\"Skip\"\r\n      />\r\n      <q-btn\r\n        class=\"q-mx-md\"\r\n        color=\"green\"\r\n        outline\r\n        @click=\"saveTags\"\r\n        label=\"Save\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { mapState, mapMutations } from \"vuex\";\r\nimport Token from \"./Token\";\r\nimport TokenBlock from \"./TokenBlock\";\r\nimport ClassesBlock from \"./ClassesBlock.vue\";\r\nimport TokenManager from \"./token-manager\";\r\nimport TreebankTokenizer from \"treebank-tokenizer\";\r\n\r\nexport default {\r\n  name: \"AnnotationPage\",\r\n  data: function() {\r\n    return {\r\n      tm: new TokenManager([]),\r\n      currentSentence: {},\r\n      redone: \"\",\r\n      tokenizer: new TreebankTokenizer(),\r\n    };\r\n  },\r\n  components: {\r\n    Token,\r\n    TokenBlock,\r\n    ClassesBlock,\r\n  },\r\n  computed: {\r\n    ...mapState([\r\n      \"annotations\",\r\n      \"classes\",\r\n      \"currentClass\",\r\n      \"currentIndex\",\r\n      \"inputSentences\",\r\n      \"enableKeyboardShortcuts\",\r\n      \"annotationPrecision\",\r\n    ]),\r\n  },\r\n  watch: {\r\n    inputSentences() {\r\n      this.resetIndex();\r\n      this.tokenizeCurrentSentence();\r\n    },\r\n    annotations() {\r\n      if (this.currentAnnotation != this.annotations[this.currentIndex]) {\r\n        this.tokenizeCurrentSentence();\r\n      }\r\n    },\r\n    classes() {\r\n      this.tokenizeCurrentSentence();\r\n    },\r\n    annotationPrecision() {\r\n      this.tokenizeCurrentSentence();\r\n    }\r\n  },\r\n  created() {\r\n    if (this.inputSentences.length) {\r\n      this.tokenizeCurrentSentence();\r\n    }\r\n    document.addEventListener(\"mouseup\", this.selectTokens);\r\n    document.addEventListener('keydown', this.keypress);\r\n  },\r\n  beforeUnmount() {\r\n    document.removeEventListener(\"mouseup\", this.selectTokens);\r\n    document.removeEventListener(\"keydown\", this.keypress);\r\n  },\r\n  methods: {\r\n    ...mapMutations([\"nextSentence\", \"previousSentence\", \"resetIndex\"]),\r\n    keypress(event) {\r\n      if (!this.enableKeyboardShortcuts) {\r\n        return\r\n      }\r\n      if (event.keyCode == 32) { // Space\r\n        this.saveTags();\r\n      } else if (event.keyCode == 39) { // right arrow\r\n        this.skipCurrentSentence();\r\n      } else if (event.keyCode == 37) { // left arrow\r\n        this.backOneSentence();\r\n      } else if (event.keyCode == 82 || event.keyCode == 27) { // r / R or ESC\r\n        this.resetBlocks();\r\n      }\r\n      // stop event from bubbling up\r\n      event.stopPropagation()\r\n    },\r\n    tokenizeCurrentSentence() {\r\n      this.currentSentence = this.inputSentences[this.currentIndex];\r\n      this.currentAnnotation = this.annotations[this.currentIndex];\r\n\r\n      let tokens, spans;\r\n\r\n      if (this.$store.state.annotationPrecision == \"char\") {\r\n        tokens = this.currentSentence.text.split('');\r\n        spans = []\r\n        for (let i = 0; i < this.currentSentence.text.length; i++) {\r\n          spans.push([i, i + 1]);\r\n        }\r\n      } else {\r\n        tokens = this.tokenizer.tokenize(this.currentSentence.text);\r\n        spans = this.tokenizer.span_tokenize(this.currentSentence.text);\r\n      }\r\n\r\n      let combined = tokens.map((t, i) => [spans[i][0], spans[i][1], t]);\r\n\r\n      this.tm = new TokenManager(this.classes);\r\n      this.tm.setTokensAndAnnotation(combined, this.currentAnnotation);\r\n    },\r\n    selectTokens() {\r\n      let selection = document.getSelection();\r\n\r\n      if (\r\n        selection.anchorOffset === selection.focusOffset &&\r\n        selection.anchorNode === selection.focusNode\r\n      ) {\r\n        return;\r\n      }\r\n      \r\n      const rangeStart = selection.getRangeAt(0);\r\n      const rangeEnd = selection.getRangeAt(selection.rangeCount - 1);\r\n      let start, end;\r\n      try {\r\n        start = parseInt(rangeStart.startContainer.parentElement.id.replace(\"t\", \"\"));\r\n        let offsetEnd = parseInt(rangeEnd.endContainer.parentElement.id.replace(\"t\", \"\"));\r\n        end = offsetEnd + rangeEnd.endOffset;\r\n      } catch {\r\n        console.log(\"selected text were not tokens\");\r\n        return;\r\n      }\r\n\r\n      if (!this.classes.length && selection.anchorNode) {\r\n        alert(\r\n          \"There are no Tags available. Kindly add some Tags before tagging.\"\r\n        );\r\n        selection.empty();\r\n        return;\r\n      }\r\n      \r\n      this.tm.addNewBlock(start, end, this.currentClass);\r\n      selection.empty();\r\n    },\r\n    onRemoveBlock(blockStart) {\r\n      this.tm.removeBlock(blockStart);\r\n    },\r\n    resetBlocks() {\r\n      this.tm.resetBlocks();\r\n    },\r\n    skipCurrentSentence() {\r\n      this.nextSentence();\r\n      this.tokenizeCurrentSentence();\r\n    },\r\n    backOneSentence() {\r\n      this.previousSentence();\r\n      this.tokenizeCurrentSentence();\r\n    },\r\n    saveTags() {\r\n      this.$store.commit(\"addAnnotation\", {\r\n        text: this.currentSentence.text,\r\n        entities: this.tm.exportAsAnnotation(),\r\n      });\r\n      this.nextSentence();\r\n      this.tokenizeCurrentSentence();\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";;EAGSA,KAAK,EAAC,SAAS;EAACC,KAAuC,EAAvC;IAAA;IAAA;EAAA;;;EAYhBD,KAAK,EAAC,SAAS;EAACC,KAAkC,EAAlC;IAAA;EAAA;;;;;uBAdvBC,mBAAA,CA2CM,cA1CJC,YAAA,CAAiBC,wBAAA,GACjBC,mBAAA,CAUM,OAVNC,UAUM,I,kBATJJ,mBAAA,CAQEK,SAAA,QAAAC,WAAA,CALYC,IAAA,CAAAC,EAAE,CAACC,MAAM,EAAdC,CAAC;yBAHVC,YAAA,CAQEC,wBAAA,CAPKF,CAAC,CAACG,IAAI;MACVC,EAAE,QAAQJ,CAAC,CAACK,KAAK;MAEjBC,KAAK,EAAEN,CAAC;MACRO,GAAG,EAAEP,CAAC,CAACK,KAAK;MACZG,eAAe,EAAER,CAAC,CAACQ,eAAe;MAClCC,aAAY,EAAEC,QAAA,CAAAD;;oCAInBhB,mBAAA,CA4BM,OA5BNkB,UA4BM,GA3BJpB,YAAA,CAMEqB,gBAAA;IALAC,KAAK,EAAC,KAAK;IACXC,OAAO,EAAP,EAAO;IACP1B,KAAK,EAAC,SAAS;IACd2B,OAAK,EAAEL,QAAA,CAAAM,WAAW;IACnBC,KAAK,EAAC;wCAER1B,YAAA,CAMEqB,gBAAA;IALAxB,KAAK,EAAC,SAAS;IACf0B,OAAO,EAAP,EAAO;IACNC,OAAK,EAAEL,QAAA,CAAAQ,eAAe;IACtBC,QAAQ,EAAEtB,IAAA,CAAAuB,YAAY;IACvBH,KAAK,EAAC;oDAER1B,YAAA,CAKEqB,gBAAA;IAJAxB,KAAK,EAAC,SAAS;IACf0B,OAAO,EAAP,EAAO;IACNC,OAAK,EAAEL,QAAA,CAAAW,mBAAmB;IAC3BJ,KAAK,EAAC;wCAER1B,YAAA,CAMEqB,gBAAA;IALAxB,KAAK,EAAC,SAAS;IACfyB,KAAK,EAAC,OAAO;IACbC,OAAO,EAAP,EAAO;IACNC,OAAK,EAAEL,QAAA,CAAAY,QAAQ;IAChBL,KAAK,EAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}